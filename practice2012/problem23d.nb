(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    162982,       3768]
NotebookOptionsPosition[    155022,       3496]
NotebookOutlinePosition[    155559,       3519]
CellTagsIndexPosition[    155472,       3514]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
d.) Display the output of the rules acting on the x,y coordinates written in \
base 2, say on an array of size 64 by 64.  Try for instance the 36118th rule \
(with no convention, it is possible a different numbering scheme will behave \
differently).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"regola", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "0", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "0", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "2", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "2", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "2", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "0", "}"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", "1", "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5799374483755007`*^9, 3.579937468285206*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "0", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "0", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "2", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "0", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579937451425908*^9, 3.579937469200754*^9}, 
   3.5799514014092197`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"crea", "[", "stato_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"stato", ",", "#"}], "}"}], "&"}], " ", "/@", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trasforma", "[", "stato_", "]"}], ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"crea", "[", "stato", "]"}], "/.", " ", "regola"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.579937832899375*^9, 3.5799378979066677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inizio", "=", " ", 
  RowBox[{"{", 
   RowBox[{"{", "0", "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.579937494884067*^9, 3.579937507463992*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.579937508669002*^9, 3.579951401617093*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trasforma", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.579938190713046*^9, 3.579938195019197*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.579938195459003*^9, 3.579951401679031*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"crea", "[", "#", "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.579938343536138*^9, 3.5799383733186703`*^9}, {
  3.579938459635728*^9, 3.579938480674161*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579938467207818*^9, 3.5799384811392384`*^9}, 
   3.57995140172827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trasforma2", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.579938754321192*^9, 3.579938757141045*^9}}],

Cell[BoxData[
 RowBox[{"trasforma2", "[", "0", "]"}]], "Output",
 CellChangeTimes->{3.579938757610248*^9, 3.579951401781598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trasforma2", "[", "stati_", "]"}], ":=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"trasforma", "[", "#", "]"}], "&"}], " ", "/@", " ", "stati"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.579938668099166*^9, 3.579938695973914*^9}, {
  3.5799388955253468`*^9, 3.579938899494388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trasforma2", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"trasforma", "[", "#", "]"}], "&"}], " ", "/@", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.579938727625614*^9, 3.579938740389901*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", 
   ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.579938741548402*^9, 3.579938903158354*^9, 
  3.57995140186104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trasforma", "[", "#", "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.579938203992845*^9, 3.579938219491583*^9}, {
  3.579938390285901*^9, 3.579938397385702*^9}, {3.579938432129891*^9, 
  3.5799384350736513`*^9}, {3.5799384916676064`*^9, 3.579938493555011*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.579938220112005*^9, {3.579938391344489*^9, 3.579938397835806*^9}, 
   3.579938435634301*^9, 3.579938494837213*^9, 3.579951401929324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"trasforma2", " ", ",", 
   RowBox[{"{", "0", "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.579937566668703*^9, 3.5799375890056067`*^9}, {
   3.5799377681486683`*^9, 3.579937799321835*^9}, {3.5799379072673407`*^9, 
   3.579937911291719*^9}, {3.5799379567581987`*^9, 3.5799379903650637`*^9}, {
   3.579938616783018*^9, 3.5799386336357718`*^9}, 3.5799387031417627`*^9, {
   3.579938780955941*^9, 3.579938789809969*^9}, {3.5799389236642942`*^9, 
   3.579938934578679*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", 
     ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579938629817852*^9, 3.579938634073287*^9}, {
   3.57993870395399*^9, 3.579938722329441*^9}, 3.57993879032486*^9, {
   3.5799389068153877`*^9, 3.579938935016438*^9}, 3.579951401983961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stati", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{"trasforma2", ",", 
    RowBox[{"{", "0", "}"}], ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5799380184865427`*^9, 3.5799380323188953`*^9}, {
   3.579938103811904*^9, 3.579938142466905*^9}, {3.5799388002675037`*^9, 
   3.5799388778194447`*^9}, {3.5799389611252403`*^9, 3.579938962276094*^9}, 
   3.57993967625456*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", 
   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", 
   "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "0", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", 
   "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.579938025593651*^9, 3.579938032826483*^9}, {
   3.579938104597362*^9, 3.5799381431435747`*^9}, {3.579938806807119*^9, 
   3.579938878966744*^9}, 3.579938962769783*^9, 3.5799396770131083`*^9, 
   3.579951402079314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "stati", "]"}]], "Input",
 CellChangeTimes->{{3.579938035624735*^9, 3.579938038422398*^9}}],

Cell[BoxData["4096"], "Output",
 CellChangeTimes->{{3.5799388124252853`*^9, 3.579938865197266*^9}, {
   3.57993896749684*^9, 3.5799389699420958`*^9}, 3.5799390190915947`*^9, 
   3.579939681765758*^9, 3.579951402156748*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"64", "*", "64"}]], "Input",
 CellChangeTimes->{{3.579938046941887*^9, 3.5799380555414057`*^9}}],

Cell[BoxData["4096"], "Output",
 CellChangeTimes->{{3.579938049269362*^9, 3.5799380564677677`*^9}, 
   3.5799514022157803`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "each", " ", "state", " ", "is", " ", "quadruplicate", " ", "at", " ", 
    "each", " ", "step"}], ",", " ", 
   RowBox[{"so", " ", "we", " ", "have", " ", 
    RowBox[{"4", "^", "steps"}], " ", "final", " ", "states"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.579939712180401*^9, 3.579939747183662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "^", "6"}]], "Input",
 CellChangeTimes->{{3.579939698363532*^9, 3.5799397003993053`*^9}}],

Cell[BoxData["4096"], "Output",
 CellChangeTimes->{3.579939700761506*^9, 3.5799514022969437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"L", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "stati", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"no", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "L"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "L"}], "}"}]}], "]"}]}], "]"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.579940197665573*^9, 3.579940288491827*^9}, {
  3.579940337589294*^9, 3.5799404591172132`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"},
     {"no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", 
      "no", "no", "no", "no"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5799403573905287`*^9, {3.579940388400144*^9, 3.579940460033637*^9}, 
   3.5799514023943644`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ex1", "=", " ", 
  RowBox[{"Nest", "[", 
   RowBox[{"trasforma2", ",", 
    RowBox[{"{", "0", "}"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.579942943878825*^9, 3.5799429691193237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{3.57994297412824*^9, 3.579951402553331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "ex1", "]"}]], "Input",
 CellChangeTimes->{{3.579951534450326*^9, 3.57995153953928*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.5799515399451303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ex2", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{"trasforma2", ",", 
    RowBox[{"{", "0", "}"}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.579951775143448*^9, 3.579951783229195*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", "1", ",", "2", 
   ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.5799517755412607`*^9, 3.5799517837628117`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Length", "[", "ex2", "]"}]], "Input",
 CellChangeTimes->{{3.5799517867242613`*^9, 3.5799517912610903`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"quanti", " ", "quadrati", " ", "2", 
   RowBox[{"x2", "?"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.579951914479496*^9, 3.5799519260207767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"64", "/", "4"}]], "Input",
 CellChangeTimes->{{3.5799518033296423`*^9, 3.579951804347569*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.579951805484408*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Quante", " ", 
   RowBox[{"rghe", "/", 
    RowBox[{"colonne", "?"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.57995192913361*^9, 3.579951940483965*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "16", "]"}]], "Input",
 CellChangeTimes->{{3.5799519022905483`*^9, 3.579951907755608*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.579951908243512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "=", 
      RowBox[{"Length", "[", "ex1", "]"}]}], ",", 
     RowBox[{"colonna", "=", "1"}], ",", 
     RowBox[{"riga", "=", "1"}], ",", 
     RowBox[{"st", "=", "ex1"}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"no", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"riga", "+", "1"}], ",", 
               RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", " ", 
            RowBox[{"st", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "2"}], ",", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"riga", ",", 
                 RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", 
              RowBox[{"st", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "3"}], ",", 
               RowBox[{
                RowBox[{"m", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"riga", "+", "1"}], ",", "colonna"}], "]"}], "]"}],
                 "=", 
                RowBox[{"st", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"m", "[", 
                 RowBox[{"[", 
                  RowBox[{"riga", ",", "colonna"}], "]"}], "]"}], "=", 
                RowBox[{"st", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", 
                RowBox[{"2", 
                 RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[NotEqual]", 
              "0"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"colonna", "=", 
              RowBox[{"colonna", "+", "2"}]}], ";", 
             RowBox[{"Print", "[", "colonna", "]"}]}], ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"2", 
                   RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[Equal]", 
                "0"}]}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"riga", "=", 
                RowBox[{"riga", "+", "2"}]}], ";", 
               RowBox[{"colonna", "=", 
                RowBox[{"colonna", "-", "2"}]}], ";", 
               RowBox[{"Print", "[", "riga", "]"}]}], ")"}], ",", "Null"}], 
            "]"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "L"}], "}"}]}], "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.579940926250296*^9, 3.5799409292277527`*^9}, {
   3.579940978241184*^9, 3.579941007131415*^9}, {3.57994213402982*^9, 
   3.5799423036881723`*^9}, {3.57994280533951*^9, 3.5799429336963882`*^9}, {
   3.579942977143827*^9, 3.579943053811791*^9}, {3.579943084427252*^9, 
   3.579943084880083*^9}, {3.579943187391192*^9, 3.579943246740014*^9}, {
   3.5799432958446703`*^9, 3.579943346108477*^9}, 3.579943426085473*^9, 
   3.579943457173151*^9, {3.57994350891269*^9, 3.579943518949332*^9}, {
   3.579943557423967*^9, 3.579943581754925*^9}, {3.5799520944444513`*^9, 
   3.57995210459588*^9}, {3.579952161627247*^9, 3.579952165874711*^9}, {
   3.5799523481143436`*^9, 3.579952363690518*^9}, 3.579952597043141*^9, {
   3.5799526699924583`*^9, 3.5799527003780193`*^9}, {3.579952816674939*^9, 
   3.579952840447864*^9}, {3.579952878316942*^9, 3.5799529050310793`*^9}, {
   3.5799554365947523`*^9, 3.579955442320911*^9}, {3.579955474091629*^9, 
   3.579955474858968*^9}, {3.579955859639419*^9, 3.579955862567272*^9}}],

Cell[CellGroupData[{

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.579943318804289*^9, 3.579943350050004*^9}, 
   3.579943396278885*^9, {3.579943429649877*^9, 3.5799434607535067`*^9}, 
   3.579943521823472*^9, {3.579943562134296*^9, 3.579943582911766*^9}, 
   3.5799514026139097`*^9, {3.579952105297874*^9, 3.579952113950246*^9}, 
   3.579952166755457*^9, {3.579952342549839*^9, 3.5799523644476624`*^9}, 
   3.5799524638651447`*^9, 3.579952598279621*^9, {3.5799526944277143`*^9, 
   3.5799527008829317`*^9}, {3.579952841784862*^9, 3.579952844702775*^9}, {
   3.579952883893635*^9, 3.579952905370955*^9}, 3.57995298849*^9, 
   3.5799553968690243`*^9, 3.5799554433367558`*^9, {3.579955475764266*^9, 
   3.579955490334836*^9}, 3.579955863709539*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.579943318804289*^9, 3.579943350050004*^9}, 
   3.579943396278885*^9, {3.579943429649877*^9, 3.5799434607535067`*^9}, 
   3.579943521823472*^9, {3.579943562134296*^9, 3.579943582911766*^9}, 
   3.5799514026139097`*^9, {3.579952105297874*^9, 3.579952113950246*^9}, 
   3.579952166755457*^9, {3.579952342549839*^9, 3.5799523644476624`*^9}, 
   3.5799524638651447`*^9, 3.579952598279621*^9, {3.5799526944277143`*^9, 
   3.5799527008829317`*^9}, {3.579952841784862*^9, 3.579952844702775*^9}, {
   3.579952883893635*^9, 3.579952905370955*^9}, 3.57995298849*^9, 
   3.5799553968690243`*^9, 3.5799554433367558`*^9, {3.579955475764266*^9, 
   3.579955490334836*^9}, 3.579955863712571*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.579943318804289*^9, 3.579943350050004*^9}, 
   3.579943396278885*^9, {3.579943429649877*^9, 3.5799434607535067`*^9}, 
   3.579943521823472*^9, {3.579943562134296*^9, 3.579943582911766*^9}, 
   3.5799514026139097`*^9, {3.579952105297874*^9, 3.579952113950246*^9}, 
   3.579952166755457*^9, {3.579952342549839*^9, 3.5799523644476624`*^9}, 
   3.5799524638651447`*^9, 3.579952598279621*^9, {3.5799526944277143`*^9, 
   3.5799527008829317`*^9}, {3.579952841784862*^9, 3.579952844702775*^9}, {
   3.579952883893635*^9, 3.579952905370955*^9}, 3.57995298849*^9, 
   3.5799553968690243`*^9, 3.5799554433367558`*^9, {3.579955475764266*^9, 
   3.579955490334836*^9}, 3.579955863717205*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.579943318804289*^9, 3.579943350050004*^9}, 
   3.579943396278885*^9, {3.579943429649877*^9, 3.5799434607535067`*^9}, 
   3.579943521823472*^9, {3.579943562134296*^9, 3.579943582911766*^9}, 
   3.5799514026139097`*^9, {3.579952105297874*^9, 3.579952113950246*^9}, 
   3.579952166755457*^9, {3.579952342549839*^9, 3.5799523644476624`*^9}, 
   3.5799524638651447`*^9, 3.579952598279621*^9, {3.5799526944277143`*^9, 
   3.5799527008829317`*^9}, {3.579952841784862*^9, 3.579952844702775*^9}, {
   3.579952883893635*^9, 3.579952905370955*^9}, 3.57995298849*^9, 
   3.5799553968690243`*^9, 3.5799554433367558`*^9, {3.579955475764266*^9, 
   3.579955490334836*^9}, 3.57995586372163*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.57994331880753*^9, 3.5799433500532103`*^9}, 
   3.579943396282111*^9, {3.57994342965488*^9, 3.579943460756966*^9}, 
   3.579943521847117*^9, {3.579943562157215*^9, 3.579943582925576*^9}, 
   3.579951402620696*^9, {3.579952105305613*^9, 3.579952113957988*^9}, 
   3.5799521667632027`*^9, {3.579952342559908*^9, 3.579952364455448*^9}, 
   3.5799524638729563`*^9, 3.579952599234499*^9, {3.579952694453824*^9, 
   3.579952700914653*^9}, {3.579952841810463*^9, 3.5799528447347383`*^9}, {
   3.579952883919115*^9, 3.579952905397079*^9}, 3.579952988515704*^9, 
   3.579955396895591*^9, 3.5799554433551817`*^9, {3.579955475780883*^9, 
   3.579955490351426*^9}, 3.579955863726355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["m"], "Input",
 CellChangeTimes->{3.579943155958598*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.579952991578586*^9, 3.5799551665623627`*^9, 
  3.579955400643076*^9, 3.579955446688375*^9}]
}, Open  ]],

Cell[BoxData["\.10"], "Input",
 CellChangeTimes->{3.579954346468996*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"no", ",", "no", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"no", ",", "no", ",", "1", ",", "1"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.579952918310389*^9, 3.579952926290984*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"1", "2", "1", "2"},
     {"no", "no", "1", "1"},
     {"no", "no", "1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.579952926915049*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.5799434108153763`*^9, 3.579943416934219*^9}, 
   3.579943466335988*^9, 3.579943531365117*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.5799434173584146`*^9, 3.579943467360201*^9, {3.579943532367209*^9, 
   3.5799435339119253`*^9}, 3.579951402724182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Mod"], "Input",
 CellChangeTimes->{{3.579943440261696*^9, 3.579943440614043*^9}}],

Cell[BoxData["Mod"], "Output",
 CellChangeTimes->{3.5799514027861233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"5", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.5799438598826036`*^9, 3.579943864618301*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.5799438651134644`*^9, 3.579951402838716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"9", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.579951506401984*^9, 3.5799515184679117`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.579951512596216*^9, 3.5799515191520042`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "16", "]"}]], "Input",
 CellChangeTimes->{{3.579951624362719*^9, 3.579951631552079*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.5799516321726637`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"createquad", "[", "states_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", "=", 
       RowBox[{"Length", "[", "states", "]"}]}], ",", 
      RowBox[{"colonna", "=", "1"}], ",", 
      RowBox[{"riga", "=", "1"}], ",", 
      RowBox[{"st", "=", "states"}]}], "}"}], ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"no", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"riga", "+", "1"}], ",", 
                RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", " ", 
             RowBox[{"st", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"riga", ",", 
                  RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", 
               RowBox[{"st", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "3"}], ",", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"riga", "+", "1"}], ",", "colonna"}], "]"}], 
                  "]"}], "=", 
                 RowBox[{"st", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{"riga", ",", "colonna"}], "]"}], "]"}], "=", 
                 RowBox[{"st", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}],
           ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", " ", 
              
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"2", 
                  RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[NotEqual]", 
               "0"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"colonna", "=", 
               RowBox[{"colonna", "+", "2"}]}], ";"}], ")"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"2", 
                    RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[Equal]", 
                 "0"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"riga", "=", 
                 RowBox[{"riga", "+", "2"}]}], ";", 
                RowBox[{"colonna", "=", 
                 RowBox[{"colonna", "-", "2"}]}], ";"}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"colonna", "=", "colonna"}], ";", 
                RowBox[{"riga", "=", "riga"}], ";"}], ")"}]}], "]"}]}], 
           "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "L"}], "}"}]}], "]"}]}], ")"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.579955596748053*^9, 3.579955632119224*^9}, {
  3.5799558230954227`*^9, 3.5799558366258783`*^9}, {3.579955887317318*^9, 
  3.579955889791377*^9}, {3.5799560406314783`*^9, 3.5799561119868097`*^9}, {
  3.579956153535836*^9, 3.5799561610819893`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Nest", "[", 
    RowBox[{"trasforma2", ",", 
     RowBox[{"{", "0", "}"}], ",", "6"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.579955934859455*^9, 3.579955937969277*^9}, {
  3.5799569135749893`*^9, 3.579956915839471*^9}}],

Cell[BoxData[
 RowBox[{"createquad", "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.579955644341546*^9, 3.5799556878162937`*^9}, {
  3.5799557890284433`*^9, 3.5799557938097687`*^9}, {3.5799559537522907`*^9, 
  3.579955963824192*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "=", 
      RowBox[{"Length", "[", "ex1", "]"}]}], ",", 
     RowBox[{"colonna", "=", "1"}], ",", 
     RowBox[{"riga", "=", "1"}], ",", 
     RowBox[{"st", "=", "ex1"}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"no", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"riga", "+", "1"}], ",", 
               RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", " ", 
            RowBox[{"st", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "2"}], ",", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"riga", ",", 
                 RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", 
              RowBox[{"st", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "3"}], ",", 
               RowBox[{
                RowBox[{"m", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"riga", "+", "1"}], ",", "colonna"}], "]"}], "]"}],
                 "=", 
                RowBox[{"st", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"m", "[", 
                 RowBox[{"[", 
                  RowBox[{"riga", ",", "colonna"}], "]"}], "]"}], "=", 
                RowBox[{"st", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", 
                RowBox[{"2", 
                 RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[NotEqual]", 
              "0"}]}], ")"}], ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"colonna", "=", 
              RowBox[{"colonna", "+", "2"}]}], ";", 
             RowBox[{"Print", "[", "colonna", "]"}]}], ")"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{"2", 
                   RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[Equal]", 
                "0"}]}], ")"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"riga", "=", 
                RowBox[{"riga", "+", "2"}]}], ";", 
               RowBox[{"colonna", "=", 
                RowBox[{"colonna", "-", "2"}]}], ";", 
               RowBox[{"Print", "[", "riga", "]"}]}], ")"}], ",", "Null"}], 
            "]"}]}], "]"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "L"}], "}"}]}], "]"}]}], ")"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "=", 
      RowBox[{"Length", "[", "ex1", "]"}]}], ",", 
     RowBox[{"colonna", "=", "1"}], ",", 
     RowBox[{"riga", "=", "1"}], ",", 
     RowBox[{"st", "=", "ex1"}]}], "}"}], ",", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"no", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Sqrt", "[", "L", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"#1", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"riga", "+", "1"}], ",", 
                RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", " ", 
             RowBox[{"st", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"riga", ",", 
                  RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", 
               RowBox[{"st", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "3"}], ",", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"riga", "+", "1"}], ",", "colonna"}], "]"}], 
                  "]"}], "=", 
                 RowBox[{"st", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"m", "[", 
                  RowBox[{"[", 
                   RowBox[{"riga", ",", "colonna"}], "]"}], "]"}], "=", 
                 RowBox[{"st", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}],
           ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", " ", 
              
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", 
                  RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[NotEqual]", 
               "0"}]}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"colonna", "=", 
               RowBox[{"colonna", "+", "2"}]}], ";", 
              RowBox[{"Print", "[", "colonna", "]"}]}], ")"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"2", 
                    RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[Equal]", 
                 "0"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"riga", "=", 
                 RowBox[{"riga", "+", "2"}]}], ";", 
                RowBox[{"colonna", "=", 
                 RowBox[{"colonna", "-", "2"}]}], ";", 
                RowBox[{"Print", "[", "riga", "]"}]}], ")"}], ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"riga", "=", "riga"}], ";", 
                RowBox[{"colonna", "=", "colonna"}], ";"}], ")"}]}], "]"}]}], 
           "]"}]}], ")"}], "&"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "st", "]"}]}], "]"}]}], "]"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.579956938338623*^9, 3.579957130387024*^9}, {
  3.579957249712743*^9, 3.579957275439865*^9}}],

Cell[CellGroupData[{

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.579957131612809*^9, {3.579957276607514*^9, 3.579957288943452*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.579957131612809*^9, {3.579957276607514*^9, 3.579957288946425*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{
  3.579957131612809*^9, {3.579957276607514*^9, 3.579957288949864*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{
  3.579957131612809*^9, {3.579957276607514*^9, 3.579957288953363*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.579957288957142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["m"], "Input",
 CellChangeTimes->{3.579957137175356*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.579957137542194*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#1", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"riga", "+", "1"}], ",", 
           RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", " ", 
        RowBox[{"st", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "2"}], ",", 
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"riga", ",", 
             RowBox[{"colonna", "+", "1"}]}], "]"}], "]"}], "=", 
          RowBox[{"st", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "3"}], ",", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"riga", "+", "1"}], ",", "colonna"}], "]"}], "]"}], 
            "=", 
            RowBox[{"st", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"m", "[", 
             RowBox[{"[", 
              RowBox[{"riga", ",", "colonna"}], "]"}], "]"}], "=", 
            RowBox[{"st", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", " ", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"#", ",", 
            RowBox[{"2", 
             RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[NotEqual]", 
          "0"}]}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"colonna", "=", 
          RowBox[{"colonna", "+", "2"}]}], ";", 
         RowBox[{"Print", "[", "colonna", "]"}]}], ")"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"#", ",", 
              RowBox[{"2", 
               RowBox[{"Sqrt", "[", "L", "]"}]}]}], "]"}], "\[Equal]", 
            "0"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"riga", "=", 
            RowBox[{"riga", "+", "2"}]}], ";", 
           RowBox[{"colonna", "=", 
            RowBox[{"colonna", "-", "2"}]}], ";", 
           RowBox[{"Print", "[", "riga", "]"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"riga", "=", "riga"}], ";", 
           RowBox[{"colonna", "=", "colonna"}], ";"}], ")"}]}], "]"}]}], 
      "]"}]}], ")"}], "&"}], " ", "@@", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"Length", "[", "st", "]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5799573309061623`*^9, 3.579957346407934*^9}, {
  3.579957387738151*^9, 3.5799574045840273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{"ex1", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.579959121842497*^9, 3.5799591277813673`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.579959128572344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrice", "[", "a_", "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.579959131668518*^9, 3.579959158968602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrice", " ", "/@", " ", 
   RowBox[{"Partition", "[", 
    RowBox[{"ex1", ",", "4"}], "]"}]}], " ", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.579959169414484*^9, 3.579959192044845*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"2"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579959183822962*^9, 3.579959192613907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", ":>"}]], "Input",
 CellChangeTimes->{{3.579959386481*^9, 3.579959390184906*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \
\\\":>\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) or \
\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \\\"TI\\\"], \\\"\[RuleDelayed]\\\", \
StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) represents a rule that transforms \
\\!\\(\\*StyleBox[\\\"lhs\\\", \\\"TI\\\"]\\) to \
\\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\), evaluating \
\\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\) only after the rule is used. \"\
\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/RuleDelayed"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.579959393407741*^9},
 CellTags->"Info3579966591-6294066"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], " ", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "}"}], "\[RuleDelayed]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.579959418385541*^9, 3.579959431826256*^9}, {
  3.5799596254427967`*^9, 3.579959638850161*^9}, {3.5799597844354153`*^9, 
  3.579959791164317*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579959635198855*^9, 3.579959640397241*^9}, 
   3.579959674799021*^9, 3.5799597918791313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "\[RuleDelayed]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "c"}], "}"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.579959456681499*^9, 3.5799594699949913`*^9}, 
   3.5799596639083967`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "\[RuleDelayed]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "c"}], "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.5799594645613537`*^9, 3.579959470556302*^9}, 
   3.579959664359735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", " ", "/.", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "}"}], 
      "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "c"}], "}"}]}], "}"}]}]}], ")"}], "&"}], "  ", "/@",
   " ", 
  RowBox[{"Partition", "[", 
   RowBox[{"ex1", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.579959817064386*^9, 3.579959879175358*^9}, {
  3.579959920571601*^9, 3.579959943263937*^9}, {3.579960074096417*^9, 
  3.579960080309278*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579959832858327*^9, 3.5799598378074503`*^9}, {
   3.5799598685745363`*^9, 3.579959883179714*^9}, {3.579959915647593*^9, 
   3.579959958438465*^9}, 3.5799600813643293`*^9, 3.579960258589459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Transpose"}]], "Input",
 CellChangeTimes->{{3.579960211701962*^9, 3.5799602375593023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579960216333303*^9, 3.57996026035524*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.579960240723241*^9, 3.579960247791417*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"2"},
          {"2"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"1"},
          {"1"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"2"},
          {"0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.579960244081799*^9, 3.579960261367086*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trasf", "[", "m_", "]"}], ":=", " ", 
  RowBox[{"m", "/.", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "}"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "c"}], "}"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.580041136735777*^9, 3.580041184448752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trasf", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.580041189967823*^9, 3.5800411973028507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5800411986457987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.58004385633902*^9, 3.5800438681785192`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.580043869143794*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{"pp", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580043870342902*^9, 3.580043901359665*^9}, {
  3.5800439680638027`*^9, 3.580043974839879*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "=", 
  RowBox[{"Nest", "[", 
   RowBox[{"trasforma2", ",", 
    RowBox[{"{", "0", "}"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.580045189840331*^9, 3.580045190444882*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "2", ",", "0", ",", "0", ",", "1", ",", "2", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "0", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.580045181959002*^9, 3.580045190973312*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{"e", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.580045194541635*^9, 3.5800452033521357`*^9}, {
  3.580047572466509*^9, 3.580047573137916*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.580045199664771*^9, 3.580045203744368*^9}, 
   3.580047573788443*^9, 3.58004763271054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OddQ", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.580047677707934*^9, 3.580047680861965*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.580047681488791*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "e2", "]"}]], "Input",
 CellChangeTimes->{{3.580047752643643*^9, 3.580047756315874*^9}}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.580047756997427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.580047821145759*^9, 3.580047822385174*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.580047822948954*^9, 3.58004788037584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.5800478247695312`*^9, 3.580047826377262*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.580047826835487*^9, 3.580047881192581*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"creamatrice", "[", "stati_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"stati", ",", "2"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "i", "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"p", ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"d", ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"L", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Length", "[", "stati", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "d", "]"}], ",", "L"}], "]"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "p", "]"}], ",", "L"}], "]"}]}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.580047960990972*^9, 3.580048065492701*^9}, {
  3.580048157274*^9, 3.580048158811193*^9}, {3.5800482016247587`*^9, 
  3.5800482716051617`*^9}, {3.5800484185133343`*^9, 3.580048504486651*^9}, {
  3.580048550721743*^9, 3.580048553494529*^9}, {3.5800486116070957`*^9, 
  3.580048633383029*^9}, {3.58004995244634*^9, 3.580049955701325*^9}, {
  3.580050284176827*^9, 3.580050294992181*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"creamatrice", "[", "e", "]"}]], "Input",
 CellChangeTimes->{{3.580048020759635*^9, 3.580048050247713*^9}, 
   3.5800486916744843`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5800486468983517`*^9, 3.580048692167412*^9, 3.5800499601862392`*^9, {
   3.58005029819934*^9, 3.5800502993680763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"EvenQ", "[", "i", "]"}], ",", 
     RowBox[{"p", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"p", ",", 
        RowBox[{"e2", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"d", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"d", ",", 
        RowBox[{"e2", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "[", "e2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.580047472936111*^9, 3.58004758249261*^9}, {
  3.5800476148915243`*^9, 3.580047618216936*^9}, {3.580047718706377*^9, 
  3.580047837796657*^9}, {3.580047872790457*^9, 3.580047875021627*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.580047839674015*^9, {3.5800478757500153`*^9, 3.580047882436597*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["p"], "Input",
 CellChangeTimes->{3.58004784686265*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5800478470916033`*^9, 3.580047885877853*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d"], "Input",
 CellChangeTimes->{3.5800478485492992`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.580047848725807*^9, 3.580047886636595*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", "p", "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.580047918661367*^9, 3.58004793618714*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.580047926940434*^9, 3.580047936643216*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", "#2"}], "}"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5800483260460978`*^9, 3.580048377576943*^9}, {
  3.5800488539944277`*^9, 3.580048925202346*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.580048870350122*^9, 3.580048926050934*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"creamatrice", "[", "e", "]"}]], "Input",
 CellChangeTimes->{{3.580048557064522*^9, 3.5800485621821947`*^9}, 
   3.580048695208146*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5800485631715117`*^9, {3.58004864361493*^9, 3.580048645394759*^9}, 
   3.580048695687563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Riffle", "[", 
    RowBox[{"#", ",", "#2"}], "]"}], "&"}], " ", "@@", " ", 
  RowBox[{"creamatrice", "[", "e", "]"}]}]], "Input",
 CellChangeTimes->{{3.580049530730363*^9, 3.580049566964629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.580049541505176*^9, 3.580049567525886*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"creamatrice2", "[", "stati_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"d", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"stati", ",", "2"}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "i", "]"}], ",", 
         RowBox[{"p", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"p", ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"d", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"d", ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"L", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Length", "[", "stati", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "d", "]"}], ",", "L"}], "]"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "p", "]"}], ",", "L"}], "]"}]}], "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5800496009286137`*^9, 3.58004961184024*^9}, {
  3.5800499742776947`*^9, 3.580049977613428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"creamatrice2", "[", "e", "]"}]], "Input",
 CellChangeTimes->{{3.580049614447434*^9, 3.580049619847213*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.580049620326865*^9, 3.5800499803163357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"creamatrice2", "[", "e", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.580049623015214*^9, 3.5800496394713297`*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{1, 1, 2, 1}, {1, 1, 0, 0}, {1, 0, 1, 0}, {2, 2, 2, 2}}, {{0, 
   0}, {4, 4}}, {0, 2}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}}]], "Output",
 CellChangeTimes->{3.5800496407152977`*^9, 3.58004998217693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", 
  RowBox[{"17", ",", "2", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.5800520925195427`*^9, 3.5800521193658648`*^9}, 
   3.580052274584024*^9, 3.5800533727710733`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.580052094692152*^9, 3.580052124281618*^9}, {
   3.580052272090888*^9, 3.580052275330777*^9}, 3.5800533734118137`*^9}]
}, Open  ]]
},
WindowSize->{740, 656},
WindowMargins->{{Automatic, -933}, {Automatic, -17}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3579966591-6294066"->{
  Cell[127978, 2608, 767, 16, 39, "Print",
   CellTags->"Info3579966591-6294066"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3579966591-6294066", 155365, 3508}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 274, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[856, 29, 2273, 76, 58, "Input"],
Cell[3132, 107, 2199, 76, 58, "Output"]
}, Open  ]],
Cell[5346, 186, 480, 16, 27, "Input"],
Cell[5829, 204, 274, 7, 27, "Input"],
Cell[CellGroupData[{
Cell[6128, 215, 172, 4, 27, "Input"],
Cell[6303, 221, 137, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6477, 229, 128, 2, 27, "Input"],
Cell[6608, 233, 157, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6802, 241, 294, 7, 27, "Input"],
Cell[7099, 250, 2222, 76, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9358, 331, 129, 2, 27, "Input"],
Cell[9490, 335, 128, 2, 27, "Output"]
}, Open  ]],
Cell[9633, 340, 350, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[10008, 353, 289, 7, 27, "Input"],
Cell[10300, 362, 1152, 17, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11489, 384, 396, 8, 27, "Input"],
Cell[11888, 394, 530, 13, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12455, 412, 532, 9, 27, "Input"],
Cell[12990, 423, 592, 13, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13619, 441, 399, 8, 27, "Input"],
Cell[14021, 451, 43440, 553, 1993, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57498, 1009, 129, 2, 27, "Input"],
Cell[57630, 1013, 222, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57889, 1021, 119, 2, 27, "Input"],
Cell[58011, 1025, 127, 2, 27, "Output"]
}, Open  ]],
Cell[58153, 1030, 375, 9, 43, "Input"],
Cell[CellGroupData[{
Cell[58553, 1043, 117, 2, 27, "Input"],
Cell[58673, 1047, 97, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58807, 1053, 581, 17, 27, "Input"],
Cell[59391, 1072, 27936, 402, 973, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87364, 1479, 223, 5, 27, "Input"],
Cell[87590, 1486, 287, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87914, 1497, 126, 2, 27, "Input"],
Cell[88043, 1501, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88153, 1507, 216, 5, 27, "Input"],
Cell[88372, 1514, 798, 12, 43, "Output"]
}, Open  ]],
Cell[89185, 1529, 131, 2, 27, "Input"],
Cell[89319, 1533, 189, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[89533, 1541, 118, 2, 27, "Input"],
Cell[89654, 1545, 71, 1, 27, "Output"]
}, Open  ]],
Cell[89740, 1549, 197, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[89962, 1558, 126, 2, 27, "Input"],
Cell[90091, 1562, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90198, 1568, 5066, 124, 133, "Input"],
Cell[CellGroupData[{
Cell[95289, 1696, 729, 10, 20, "Print"],
Cell[96021, 1708, 729, 10, 20, "Print"],
Cell[96753, 1720, 729, 10, 20, "Print"],
Cell[97485, 1732, 728, 10, 20, "Print"]
}, Open  ]],
Cell[98228, 1745, 973, 16, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99238, 1766, 69, 1, 27, "Input"],
Cell[99310, 1769, 482, 12, 27, "Output"]
}, Open  ]],
Cell[99807, 1784, 72, 1, 29, "Input"],
Cell[CellGroupData[{
Cell[99904, 1789, 483, 13, 27, "Input"],
Cell[100390, 1804, 705, 20, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101132, 1829, 195, 4, 27, "Input"],
Cell[101330, 1835, 171, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101538, 1843, 95, 1, 27, "Input"],
Cell[101636, 1846, 74, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101747, 1852, 147, 3, 27, "Input"],
Cell[101897, 1857, 94, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102028, 1863, 147, 3, 27, "Input"],
Cell[102178, 1868, 96, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102311, 1874, 124, 2, 27, "Input"],
Cell[102438, 1878, 72, 1, 27, "Output"]
}, Open  ]],
Cell[102525, 1882, 4561, 120, 133, "Input"],
Cell[107089, 2004, 286, 7, 27, "Input"],
Cell[107378, 2013, 235, 4, 27, "Input"],
Cell[107616, 2019, 4038, 110, 133, "Input"],
Cell[CellGroupData[{
Cell[111679, 2133, 4493, 120, 163, "Input"],
Cell[CellGroupData[{
Cell[116197, 2257, 118, 2, 20, "Print"],
Cell[116318, 2261, 118, 2, 20, "Print"],
Cell[116439, 2265, 118, 2, 20, "Print"],
Cell[116560, 2269, 118, 2, 20, "Print"]
}, Open  ]],
Cell[116693, 2274, 317, 7, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117047, 2286, 69, 1, 27, "Input"],
Cell[117119, 2289, 411, 11, 27, "Output"]
}, Open  ]],
Cell[117545, 2303, 3376, 97, 118, "Input"],
Cell[CellGroupData[{
Cell[120946, 2404, 155, 3, 27, "Input"],
Cell[121104, 2409, 411, 11, 27, "Output"]
}, Open  ]],
Cell[121530, 2423, 545, 17, 27, "Input"],
Cell[CellGroupData[{
Cell[122100, 2444, 234, 5, 27, "Input"],
Cell[122337, 2451, 5493, 148, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127867, 2604, 108, 2, 27, "Input"],
Cell[127978, 2608, 767, 16, 39, "Print",
 CellTags->"Info3579966591-6294066"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128782, 2629, 558, 16, 27, "Input"],
Cell[129343, 2647, 287, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129667, 2660, 379, 11, 27, "Input"],
Cell[130049, 2673, 373, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130459, 2689, 666, 20, 27, "Input"],
Cell[131128, 2711, 929, 29, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132094, 2745, 126, 2, 27, "Input"],
Cell[132223, 2749, 700, 23, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132960, 2777, 125, 2, 27, "Input"],
Cell[133088, 2781, 5479, 146, 79, "Output"]
}, Open  ]],
Cell[138582, 2930, 456, 13, 27, "Input"],
Cell[CellGroupData[{
Cell[139063, 2947, 193, 4, 27, "Input"],
Cell[139259, 2953, 215, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139511, 2965, 266, 8, 27, "Input"],
Cell[139780, 2975, 213, 7, 27, "Output"]
}, Open  ]],
Cell[140008, 2985, 337, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[140370, 2998, 214, 5, 27, "Input"],
Cell[140587, 3005, 290, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140914, 3016, 227, 5, 27, "Input"],
Cell[141144, 3023, 638, 20, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141819, 3048, 123, 2, 27, "Input"],
Cell[141945, 3052, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142055, 3058, 126, 2, 27, "Input"],
Cell[142184, 3062, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142291, 3068, 133, 3, 27, "Input"],
Cell[142427, 3073, 108, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142572, 3080, 135, 3, 27, "Input"],
Cell[142710, 3085, 109, 2, 27, "Output"]
}, Open  ]],
Cell[142834, 3090, 1905, 51, 58, "Input"],
Cell[CellGroupData[{
Cell[144764, 3145, 158, 3, 27, "Input"],
Cell[144925, 3150, 610, 18, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145572, 3173, 790, 21, 27, "Input"],
Cell[146365, 3196, 1684, 58, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148086, 3259, 68, 1, 27, "Input"],
Cell[148157, 3262, 355, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148549, 3278, 71, 1, 27, "Input"],
Cell[148623, 3281, 353, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149013, 3297, 185, 4, 27, "Input"],
Cell[149201, 3303, 277, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149515, 3315, 430, 13, 27, "Input"],
Cell[149948, 3330, 237, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150222, 3342, 158, 3, 27, "Input"],
Cell[150383, 3347, 584, 18, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151004, 3370, 242, 6, 27, "Input"],
Cell[151249, 3378, 435, 11, 27, "Output"]
}, Open  ]],
Cell[151699, 3392, 1691, 49, 73, "Input"],
Cell[CellGroupData[{
Cell[153415, 3445, 131, 2, 27, "Input"],
Cell[153549, 3449, 435, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154021, 3465, 169, 3, 27, "Input"],
Cell[154193, 3470, 297, 7, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154527, 3482, 220, 4, 27, "Input"],
Cell[154750, 3488, 256, 5, 27, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
